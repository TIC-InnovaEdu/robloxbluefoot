local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")

local UI = script.Parent
local TrancisionFrame = UI:WaitForChild("FrameDeTransicion")
local Cameras = Workspace:WaitForChild("CamarasMenu")
local MenuPrincipal = UI:WaitForChild("MenuPrincipal")
local EscenariosFolder = UI:WaitForChild("Escenarios")

local CarpetaSonidos = UI:WaitForChild("Sonidos")
local SFXCambioEscena = CarpetaSonidos:WaitForChild("CambiarEscena")
local SFXBotonPlay = CarpetaSonidos:WaitForChild("Play")
local SFXSeleccionar = CarpetaSonidos:WaitForChild("Seleccion")
local SFXClick = CarpetaSonidos:WaitForChild("Click")

-- // ESCENARIOS DISPONIBLES // --

local EscenarioCreditos = EscenariosFolder:WaitForChild("MenuCreditos")
local EscenarioAjustes = EscenariosFolder:WaitForChild("MenuAjustes")

-- // CONTENIDO DE LOS ESCENARIOS // --

local ContenidoMenuPrincipal = {
	BotonPlay = MenuPrincipal:WaitForChild("Play"),
	BotonAjustes = MenuPrincipal:WaitForChild("Ajustes"),
	BotonCreditos = MenuPrincipal:WaitForChild("Creditos"),
	Frame = MenuPrincipal:WaitForChild("Frame"),
	Logo = MenuPrincipal:WaitForChild("Logo")
}

-- // ESCENARIOS AÃ‘ADIBLES // --

local ContenidoEscenarioCreditos = {
	BotonCerrar = EscenarioCreditos:WaitForChild("Close"),
	FrameTextoCreditos = EscenarioCreditos:WaitForChild("CreditosFrame"),
	TextoCreditos = EscenarioCreditos:WaitForChild("CreditosFrame"):WaitForChild("TextCreditos"),
	TituloFrame = EscenarioCreditos:WaitForChild("Tittle"),
	TituloText = EscenarioCreditos:WaitForChild("Tittle"):WaitForChild("TittleText")
}

local ContenidoEscenarioAjustes = {
	BotonCerrar = EscenarioAjustes:WaitForChild("Close"),
	FrameAjustes = EscenarioAjustes:WaitForChild("AjustesFrame"),
	TituloFrame = EscenarioAjustes:WaitForChild("Tittle"),
	TituloText = EscenarioAjustes:WaitForChild("Tittle"):WaitForChild("TittleText")
}


-- // CAMARAS PARA CADA ESCENARIO // --

local CamarasTotales = {
	MenuPrincipalCamara = Cameras:WaitForChild("Menu"),
	AjustesCamara = Cameras:WaitForChild("CamaraAjuste"),
	CreditosCamara = Cameras:WaitForChild("CamaraCreditos")
}

-- // AJUSTES PRINCIPALES // --

local TiempoTransicion = 1.5
local Cooldown = 1.7

-- No Cambiar

local BotonesBloqueados = false


-- // SCRIPT // --


local function AnimarTransicion(aparecer, callback)
	local transparenciaInicial = aparecer and 1 or 0
	local transparenciaFinal = aparecer and 0 or 1

	TrancisionFrame.BackgroundTransparency = transparenciaInicial
	local tween = TweenService:Create(TrancisionFrame, TweenInfo.new(TiempoTransicion), {BackgroundTransparency = transparenciaFinal})
	tween:Play()
	tween.Completed:Connect(function()
		if callback then
			callback()
		end
	end)
end

local function CambiarVisibilidad(contenidoVisible, contenidoOcultar)
	for _, objeto in pairs(contenidoOcultar) do
		objeto.Visible = false
	end

	for _, objeto in pairs(contenidoVisible) do
		objeto.Visible = true
	end
end

local function OcultarTodo()
	for _, objeto in pairs(UI:GetDescendants()) do
		if objeto:IsA("GuiObject") and objeto ~= TrancisionFrame then
			objeto.Visible = false
		end
	end
end

local function CambiarEscenario(camaraDestino, contenidoVisible, contenidoOcultar)
	if BotonesBloqueados then return end
	BotonesBloqueados = true

	SFXCambioEscena:Play()

	AnimarTransicion(true, function()
		Workspace.CurrentCamera.CFrame = camaraDestino.CFrame
		CambiarVisibilidad(contenidoVisible, contenidoOcultar)
		AnimarTransicion(false)
		task.wait(Cooldown)
		BotonesBloqueados = false
	end)
end

ContenidoMenuPrincipal.BotonPlay.MouseButton1Click:Connect(function()
	if BotonesBloqueados then return end
	BotonesBloqueados = true
	SFXBotonPlay:Play()

	AnimarTransicion(true, function()
		OcultarTodo()
		local camaraActual = Workspace.CurrentCamera
		local jugador = Players.LocalPlayer
		camaraActual.CameraType = Enum.CameraType.Custom
		camaraActual.CameraSubject = jugador.Character:WaitForChild("Humanoid")
		AnimarTransicion(false)
		task.wait(Cooldown)
		BotonesBloqueados = false
	end)
end)



-- // DIRECCIONES DE LOS BOTONES DEL MENU PRINCIPAL PARA DETERMINADO MENU/ESCENARIOS // --

ContenidoMenuPrincipal.BotonCreditos.MouseButton1Click:Connect(function()
	CambiarEscenario(CamarasTotales.CreditosCamara, ContenidoEscenarioCreditos, ContenidoMenuPrincipal)
end)

ContenidoMenuPrincipal.BotonAjustes.MouseButton1Click:Connect(function()
	CambiarEscenario(CamarasTotales.AjustesCamara, ContenidoEscenarioAjustes, ContenidoMenuPrincipal)
end)





-- // BOTONES DE CIERRE, PARA VOLVER AL MENU PRINCIPAL // --

ContenidoEscenarioCreditos.BotonCerrar.MouseButton1Click:Connect(function()
	CambiarEscenario(CamarasTotales.MenuPrincipalCamara, ContenidoMenuPrincipal, ContenidoEscenarioCreditos)
end)

ContenidoEscenarioAjustes.BotonCerrar.MouseButton1Click:Connect(function()
	CambiarEscenario(CamarasTotales.MenuPrincipalCamara, ContenidoMenuPrincipal, ContenidoEscenarioAjustes)
end)



for _, objeto in pairs(UI:GetDescendants()) do
	if objeto:IsA("TextButton") then
		objeto.MouseEnter:Connect(function()
			SFXSeleccionar:Play()
		end)
	end
end

Workspace.CurrentCamera.CameraType = Enum.CameraType.Scriptable
Workspace.CurrentCamera.CFrame = CamarasTotales.MenuPrincipalCamara.CFrame
CambiarVisibilidad(ContenidoMenuPrincipal, {})
CambiarVisibilidad({}, ContenidoEscenarioCreditos)
CambiarVisibilidad({}, ContenidoEscenarioAjustes)